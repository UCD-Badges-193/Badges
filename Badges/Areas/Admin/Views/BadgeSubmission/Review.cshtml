@model Badges.Areas.Admin.Controllers.BadgeSubmissionViewModel

@{
    ViewBag.Title = "Review Submission";
}

@section SubNav
{
	<li>@Html.ActionLink("Back to List", "Index")</li>
}

<div>
    <fieldset>
        <legend>Review Badge Submission</legend>
        <div class="form-group">
            <label>Submitted</label>
            <div class="form-control-static">by @Model.Submission.Creator.Profile.DisplayName at @Model.Submission.SubmittedOn</div>
        </div>
        <div class="form-group">
            <label>Badge</label>
            <div class="form-control-static">@Model.Badge.Name</div>
        </div>
        <div class="form-group">
            <label>Criteria</label>
            <table class="table table-condensed table-bordered">
                <tbody>
                    @foreach (var criterion in Model.BadgeCriteria)
                    {
                        <tr>
                            <td colspan="3">
                                <h4 class="form-control-static">@criterion.Details</h4>
                            </td>
                        </tr>
                        foreach (var fulfillment in Model.BadgeFulfillments.Where(x => x.BadgeCriteria.Id == criterion.Id))
                        {
                            var name = fulfillment.Experience == null ? fulfillment.SupportingWork.Description : fulfillment.Experience.Name;
                            <tr>
                                <td></td>
                                <td>@name</td>
                                <td><em>@fulfillment.Comment</em></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <div class="form-group">
            <label>Reflection/Comments</label>
            <div class="form-control-static">
                @(string.IsNullOrWhiteSpace(Model.Submission.Reflection) ? "{None}" : Model.Submission.Reflection)
            </div>
        </div>
        <hr/>
        <div class="form-actions">
            @using (Html.BeginForm("Approve", "BadgeSubmission", new { area = "Admin", id = Model.Submission.Id }, FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-primary">
                    Approve!
                </button>
            }
            OR
            <br/>
            <a href="#deny" data-toggle="modal" class="btn btn-danger">Deny</a>
        </div>
    </fieldset>
</div>

<!-- Modal -->
<div id="deny" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="deny-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h3 id="deny-label">Return Badge Submission</h3>
            </div>
            @using (Html.BeginForm("Deny", "BadgeSubmission", new { area = "Admin", id = Model.Submission.Id }, FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="form-group">
                        <label>Deny Reason</label>
                        <textarea name="reason" class="form-control">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut tempor ipsum at mauris convallis blandit. Praesent ut nunc condimentum, fermentum urna vulputate, rutrum turpis. Vestibulum commodo vitae nisi non sagittis.</textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" class="btn btn-danger" value="Deny" />
                    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
                </div>
            }
        </div>
    </div>
</div>